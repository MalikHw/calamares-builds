name: Build Calamares

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Get current date
        id: get_date
        run: echo "DATE_TAG=$(date -u +'%Y-%m-%d_%H-%M-%S')" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt update && sudo apt install -y cmake extra-cmake-modules qtbase5-dev qtdeclarative5-dev qml-module-qtquick-controls qml-module-qtquick-controls2 qml-module-qtquick-layouts qml-module-qtquick2 libkf5coreaddons-dev libkf5i18n-dev libkf5config-dev libkf5configwidgets-dev libkf5kcmutils-dev libkf5solid-dev libkf5service-dev libyaml-cpp-dev libboost-all-dev libparted-dev libmount-dev libblkid-dev libpolkit-agent-1-dev libpolkit-qt5-1-dev libpolkit-gobject-1-dev libx11-dev libxt-dev libxext-dev libxrender-dev libxi-dev libxcb1-dev libxcb-util-dev libxcb-keysyms1-dev libxcb-image0-dev libxcb-shm0-dev libxcb-icccm4-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-shape0-dev libxcb-randr0-dev libxcb-render-util0-dev libxcb-glx0-dev libxcb-xinerama0-dev libxcb-dpms0-dev libxcb-dri2-0-dev libxcb-dri3-dev libxcb-present-dev libxcb-composite0-dev libdrm-dev libegl1-mesa-dev libgles2-mesa-dev libgl1-mesa-dev libqt5svg5-dev libkf5crash-dev libkf5doctools-dev gettext

      - name: Configure with CMake (Ninja)
        run: mkdir build && cd build && cmake -G Ninja -DWITH_QML=ON -DWITH_PYTHON=ON -DWITH_PYTHONQT=ON -DWITH_KF5Crash=ON -DWITH_PARTITIONMANAGER=ON -DWITH_NETWORK=ON -DWITH_WEBVIEW=ON -DWITH_BOOTLOADER=ON -DWITH_LOCALE=ON -DWITH_SQUASHFS=ON -DWITH_UEFI=ON ..

      - name: Build with Ninja
        run: cd build && ninja

      - name: Package build
        run: cd build && tar -czvf ../calamares_${{ env.DATE_TAG }}.tar.gz .

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.DATE_TAG }}
          release_name: ${{ env.DATE_TAG }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./calamares_${{ env.DATE_TAG }}.tar.gz
          asset_name: calamares_${{ env.DATE_TAG }}.tar.gz
          asset_content_type: application/gzip
