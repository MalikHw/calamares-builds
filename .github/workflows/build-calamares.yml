name: Build Calamares (Full Qt6 Build)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set build timestamp (GMT+1)
        id: vars
        run: |
          export TZ=Europe/Paris
          echo "DATE_TAG=$(date +'%Y-%m-%d_%H-%M-%S')" >> $GITHUB_ENV
          echo "DATE_TITLE=$(date +'%Y-%m-%d %H:%M:%S GMT+1')" >> $GITHUB_ENV

      - name: Install dependencies (Full Qt6 + KDE)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git cmake ninja-build extra-cmake-modules gettext pkg-config \
            qt6-base-dev qt6-declarative-dev qt6-tools-dev qt6-l10n-tools libqt6svg6-dev \
            qml6-module-qtquick qml6-module-qtquick-controls qml6-module-qtquick-controls2 \
            qml6-module-qtquick-layouts qml6-module-qtquick-window \
            libkf6config-dev libkf6coreaddons-dev libkf6i18n-dev libkf6iconthemes-dev \
            libkf6parts-dev libkf6service-dev libkf6solid-dev libkf6plasma-dev \
            libkf6crash-dev libkf6package-dev libkf6notifications-dev libkf6networkmanager-qt-dev \
            libpolkit-qt6-1-dev libyaml-cpp-dev libboost-all-dev \
            python3-dev python3-pyqt6 python3-pyqt6.qtsvg python3-pyqt6.qtquick python3-yaml \
            libappstreamqt-dev libpwquality-dev libnm-dev libcryptsetup-dev libparted-dev \
            os-prober rsync squashfs-tools dosfstools e2fsprogs btrfs-progs xfsprogs \
            f2fs-tools jfsutils reiserfsprogs nilfs-tools udftools

      - name: Clone Calamares from Codeberg
        run: git clone --recursive https://codeberg.org/calamares/calamares.git

      - name: Build & install Calamares (Qt6 Full)
        run: |
          cd calamares
          mkdir build && cd build
          cmake -G Ninja \
            -DWITH_ALL_MODULES=ON \
            -DWITH_QT6=ON \
            -DWITH_PYTHON=ON \
            -DWITH_PYBIND11=ON \
            -DWITH_QML=ON \
            -DINSTALL_CONFIG=ON \
            -DINSTALL_POLKIT=ON \
            -DBUILD_CRASH_REPORTING=ON \
            -DBUILD_SCHEMA_TESTING=ON \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX=/tmp/calamares \
            ..
          ninja
          ninja install

      - name: Package install directory
        run: tar -czf calamares-${{ env.DATE_TAG }}.tar.gz -C /tmp/calamares .

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.DATE_TAG }}
          name: "${{ env.DATE_TITLE }} build"
          body: "Automated full-featured Qt6 Calamares build"
          files: calamares-${{ env.DATE_TAG }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup runner
        run: sudo rm -rf /tmp/* ~/calamares ~/work
