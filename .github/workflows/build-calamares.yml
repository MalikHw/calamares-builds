libqt5webengine5-dev5webengine5-dev Ultimate Calamares Build (Full Recursive)

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout workflow
      uses: actions/checkout@v4

    - name: Install EVERY dependency imaginable
      run: |
        sudo apt-get update -y
        sudo apt-get install -y --ignore-missing \
          build-essential cmake extra-cmake-modules ninja-build \
          git pkg-config gettext \
          qtbase5-dev qttools5-dev qtdeclarative5-dev \
          libkf5config-dev libkf5coreaddons-dev libkf5i18n-dev \
          python3-dev python3-pip libyaml-cpp-dev libkpmcore-dev \
          libappstreamqt-dev libpwquality-dev libparted-dev \
          libcryptsetup-dev libatasmart-dev libboost-python-dev \
          libpolkit-qt5-1-dev libqt5svg5-dev \
          qml-module-qtquick2 qml-module-qtquick-controls \
          os-prober rsync squashfs-tools dosfstools e2fsprogs \
          btrfs-progs xfsprogs f2fs-tools jfsutils reiserfsprogs \
          nilfs-tools udftools ntfs-3g exfatprogs parted \
          lvm2 cryptsetup \
          || echo "Some packages failed but continuing..."

    - name: Install Python packages
      run: |
        pip install --break-system-packages \
          pyyaml jsonschema requests distro pybind11 \
          || echo "Some Python packages failed but continuing..."

    - name: FULL RECURSIVE CLONE (ALL COMMITS, ALL BRANCHES, ALL SUBMODULES)
      run: |
        git clone --recursive https://codeberg.org/calamares/calamares.git
        cd calamares
        git fetch --all --tags --recurse-submodules
        echo "CALAMARES_VERSION=$(git describe --tags --always)" >> $GITHUB_ENV
        echo "CALAMARES_COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Build with ALL modules
      run: |
        cd calamares
        mkdir build
        cd build
        cmake -GNinja .. \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_INSTALL_PREFIX=/usr \
          -DWITH_PYTHONQT=ON \
          -DWITH_PYTHON=ON \
          -DWITH_QML=ON \
          -DWEBVIEW_FORCE_WEBKIT=OFF \
          -DQT_MAJOR_VERSION=5 \
          -DWITH_KPMcore=ON \
          -DWITH_APPSTREAM=ON \
          -DWITH_NETWORKMANAGER=ON \
          -DWITH_PLYMOUTHCFG=ON \
          -DWITH_NETINSTALL=ON \
          -DWITH_PARTITIONMANAGER=ON \
          -DSKIP_MODULES=""
        ninja -j$(nproc)

    - name: Install to Miku fan directory
      run: |
        cd calamares/build
        DESTDIR=/tmp/calamares-cuz-i-wanna-help-some-miku-fans-who-wants-this-shit ninja install
        # Create version file
        echo "Version: ${{ env.CALAMARES_VERSION }}" > /tmp/calamares-cuz-i-wanna-help-some-miku-fans-who-wants-this-shit/VERSION
        echo "Commit: ${{ env.CALAMARES_COMMIT }}" >> /tmp/calamares-cuz-i-wanna-help-some-miku-fans-who-wants-this-shit/VERSION
        echo "Build date: $(date)" >> /tmp/calamares-cuz-i-wanna-help-some-miku-fans-who-wants-this-shit/VERSION

    - name: Create tarball
      run: |
        tar -czvf /tmp/calamares-miku-edition.tar.gz \
          -C /tmp/calamares-cuz-i-wanna-help-some-miku-fans-who-wants-this-shit .

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: calamares-miku-edition
        path: /tmp/calamares-miku-edition.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: calamares-miku-edition

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "miku-$(date +'%Y-%m-%d')"
        name: "Calamares Miku Edition $(date +'%Y-%m-%d')"
        files: calamares-miku-edition.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
